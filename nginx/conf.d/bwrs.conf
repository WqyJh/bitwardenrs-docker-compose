server {
    listen 443 ssl http2;
    server_name yourhost;

    client_max_body_size 128m;
    ssl_certificate /etc/certs/cert.crt;
    ssl_certificate_key /etc/certs/priv.key;

    ssl_session_timeout 30m;
    ssl_session_cache shared:SSL:20m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
    # Enables server-side protection from BEAST attacks
    ssl_prefer_server_ciphers on;

    # OCSP Stapling ---
    # Fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    # Verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate /etc/ssl/bitwarden.example.com/ca.crt;
    resolver 1.1.1.1 1.0.0.1 9.9.9.9 149.112.112.112 valid=300s;


    add_header Referrer-Policy same-origin;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security max-age=15768000;

    location / {
        proxy_pass http://bwrs:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeenpwned.com https://www.gravatar.com; child-src 'self' https://*.duosecurity.com; frame-src 'self' https://*.duosecurity.com; connect-src 'self' wss://yourhost https://api.pwnedpasswords.com https://twofactorauth.org; object-src 'self' blob:;";
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Robots-Tag "noindex, nofollow";
    }

    location /notifications/hub {
        proxy_pass http://bwrs:3012;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /notifications/hub/negotiate {
        proxy_pass http://bwrs:80;
    }

    # # Optionally add extra authentication besides the AUTH_TOKEN
    # # If you don't want this, leave this part out
    # location /admin {
    #   # See: https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/
    #   auth_basic "Private";
    #   auth_basic_user_file /path/to/htpasswd_file;

    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_set_header X-Forwarded-Proto $scheme;
    #   proxy_pass http://bwrs:80;
    # }
}